{"version":3,"file":"paginate.js","sourceRoot":"","sources":["../../../../app/hubspot/src/core/paginate.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,wCAsBC;AAtBD,SAAuB,cAAc,CAAU,MAO9C;;;;;;;oBACS,YAAY,GAAG,MAAA,MAAM,CAAC,YAAY,mCAAI,CAAC,UAAC,GAAQ,YAAK,OAAA,CAAC,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,mCAAI,EAAE,CAAQ,CAAA,EAAA,CAAC,CAAC;oBAClF,WAAW,GAAG,MAAA,MAAM,CAAC,iBAAiB,mCAAI,CAAC,UAAC,GAAQ,gBAAK,OAAA,MAAA,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,MAAM,0CAAE,IAAI,0CAAE,KAA2B,CAAA,EAAA,CAAC,CAAC;oBAC3G,KAAK,GAAuB,MAAA,MAAM,CAAC,KAAK,0CAAE,KAA2B,CAAC;oBACpE,KAAK,GAAG,MAAA,MAAA,MAAM,CAAC,QAAQ,mCAAK,MAAA,MAAM,CAAC,KAAK,0CAAE,KAA4B,mCAAI,GAAG,CAAC;;;yBAE7E,IAAI;oBACK,6BAAM,MAAM,CAAC,IAAI,CAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,wBAAO,CAAC,MAAA,MAAM,CAAC,KAAK,mCAAI,EAAE,CAAC,KAAE,KAAK,OAAA,EAAE,KAAK,OAAA,GAAE,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,GAAA;;oBAA3I,GAAG,GAAG,SAAqI;oBAC3I,KAAK,GAAG,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;iDAC/B,KAAK;wBAAX,gCAAW;;oBAAX,SAAW,CAAC;oBACN,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACnC,IAAI,CAAC,IAAI;wBACL,wBAAM;oBACV,KAAK,GAAG,IAAI,CAAC;;;;;;CAEpB","sourcesContent":["import type { HttpResponseEnvelope } from \"../types/envelopes\";\nexport type SendFn = <T = any>(args: {\n    method: \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\";\n    path: string;\n    query?: Record<string, any>;\n    headers?: Record<string, string>;\n    body?: unknown;\n    operation?: string;\n}) => Promise<HttpResponseEnvelope<T>>;\nexport async function* paginateCursor<T = any>(params: {\n    send: SendFn;\n    path: string;\n    query?: Record<string, any>;\n    pageSize?: number;\n    extractItems?: (res: any) => T[];\n    extractNextCursor?: (res: any) => string | undefined;\n}) {\n    const extractItems = params.extractItems ?? ((res: any) => (res?.results ?? []) as T[]);\n    const extractNext = params.extractNextCursor ?? ((res: any) => res?.paging?.next?.after as string | undefined);\n    let after: string | undefined = params.query?.after as string | undefined;\n    const limit = params.pageSize ?? (params.query?.limit as number | undefined) ?? 100;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const res = await params.send<any>({ method: \"GET\", path: params.path, query: { ...(params.query ?? {}), limit, after }, operation: \"paginate\" });\n        const items = extractItems(res.data);\n        yield items;\n        const next = extractNext(res.data);\n        if (!next)\n            break;\n        after = next;\n    }\n}\n"]}