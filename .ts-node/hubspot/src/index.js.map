{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../app/hubspot/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * HubSpotApiConnector\n *\n * Responsibilities:\n * - Initialize transport concerns (HTTP client, auth application, rate limiter)\n * - Expose lifecycle (`initialize`, `connect`, `disconnect`, `isConnected`)\n * - Provide a single `request` primitive and a generic `paginate` iterator\n * - Delegate objectâ€‘specific operations to small \"domains\" that bind paths and models\n *\n * Why domains?\n * - Separation of concerns: transport/retries/hooks stay here; paths/types live in domains\n * - Reuse: domains are built from a shared CRUD factory + paginator to avoid duplication\n * - Type safety: each domain binds its own response models for IntelliSense\n * - Extensibility: adding an object = bind path + types; rest is inherited\n */\nimport type { HubSpotConnector } from \"./types/connector\";\nimport type { ConnectorConfig } from \"./types/config\";\nimport type { HttpResponseEnvelope } from \"./types/envelopes\";\nimport { withDerivedDefaults } from \"./config/defaults\";\nimport { HttpClient } from \"./client/http-client\";\nimport { TokenBucketLimiter } from \"./rate-limit/token-bucket\";\nimport { paginateCursor, type SendFn } from \"./core/paginate\";\nimport { buildContactsDomain } from \"./domains/contacts\";\nimport { buildCompaniesDomain } from \"./domains/companies\";\nimport { buildDealsDomain } from \"./domains/deals\";\nimport { buildTicketsDomain } from \"./domains/tickets\";\nimport { buildEngagementsDomain } from \"./domains/engagements\";\nexport class HubSpotApiConnector implements HubSpotConnector {\n    private config?: ConnectorConfig;\n    private connected = false;\n    private http?: HttpClient;\n    private limiter?: TokenBucketLimiter;\n    initialize(userConfig: ConnectorConfig) {\n        this.config = withDerivedDefaults(userConfig);\n        this.http = new HttpClient(this.config, {\n            applyAuth: ({ headers }) => {\n                if (this.config?.auth.type === \"bearer\") {\n                    const token = this.config?.auth.bearer?.token;\n                    if (!token)\n                        throw new Error(\"Missing bearer token\");\n                    headers[\"Authorization\"] = `Bearer ${token}`;\n                }\n            },\n        });\n        const rps = this.config.rateLimit?.requestsPerSecond ?? 0;\n        const capacity = this.config.rateLimit?.burstCapacity ?? rps;\n        if (rps > 0)\n            this.limiter = new TokenBucketLimiter({ capacity, refillPerSec: rps });\n    }\n    async connect() {\n        this.connected = true;\n    }\n    async disconnect() {\n        this.connected = false;\n    }\n    isConnected() {\n        return this.connected;\n    }\n    private requireClient(): HttpClient {\n        if (!this.http)\n            throw new Error(\"Connector not initialized\");\n        return this.http;\n    }\n    private async send<T>(opts: Parameters<HttpClient[\"request\"]>[0]): Promise<HttpResponseEnvelope<T>> {\n        if (this.limiter)\n            await this.limiter.waitForSlot();\n        return this.requireClient().request<T>(opts);\n    }\n    request(opts: Parameters<HttpClient[\"request\"]>[0]) {\n        return this.send(opts);\n    }\n    // Generic paginator (advanced)\n    async *paginate<T = any>(options: {\n        path: string;\n        query?: Record<string, any>;\n        pageSize?: number;\n        extractItems?: (res: any) => T[];\n        extractNextCursor?: (res: any) => string | undefined;\n    }) {\n        const sendLite: SendFn = async (args) => this.send<any>(args);\n        yield* paginateCursor<T>({ send: sendLite, path: options.path, query: options.query, pageSize: options.pageSize, extractItems: options.extractItems, extractNextCursor: options.extractNextCursor });\n    }\n    // Build domain delegates\n    private get domain() {\n        const sendLite: SendFn = async (args) => this.send<any>(args);\n        return {\n            ...buildContactsDomain(sendLite),\n            ...buildCompaniesDomain(sendLite),\n            ...buildDealsDomain(sendLite),\n            ...buildTicketsDomain(sendLite),\n            ...buildEngagementsDomain(sendLite),\n        };\n    }\n    // Contacts\n    listContacts = (params?: {\n        properties?: string[];\n        limit?: number;\n        after?: string;\n    }) => this.domain.listContacts(params);\n    getContact = (params: {\n        id: string;\n        properties?: string[];\n    }) => this.domain.getContact(params);\n    streamContacts = (params?: {\n        properties?: string[];\n        pageSize?: number;\n    }) => this.domain.streamContacts(params);\n    getContacts = (params?: {\n        properties?: string[];\n        pageSize?: number;\n        maxItems?: number;\n    }) => this.domain.getContacts(params);\n    // Companies\n    listCompanies = (params?: {\n        properties?: string[];\n        limit?: number;\n        after?: string;\n    }) => this.domain.listCompanies(params);\n    getCompany = (params: {\n        id: string;\n        properties?: string[];\n    }) => this.domain.getCompany(params);\n    streamCompanies = (params?: {\n        properties?: string[];\n        pageSize?: number;\n    }) => this.domain.streamCompanies(params);\n    getCompanies = (params?: {\n        properties?: string[];\n        pageSize?: number;\n        maxItems?: number;\n    }) => this.domain.getCompanies(params);\n    // Deals\n    listDeals = (params?: {\n        properties?: string[];\n        limit?: number;\n        after?: string;\n    }) => this.domain.listDeals(params);\n    getDeal = (params: {\n        id: string;\n        properties?: string[];\n    }) => this.domain.getDeal(params);\n    streamDeals = (params?: {\n        properties?: string[];\n        pageSize?: number;\n    }) => this.domain.streamDeals(params);\n    getDeals = (params?: {\n        properties?: string[];\n        pageSize?: number;\n        maxItems?: number;\n    }) => this.domain.getDeals(params);\n    // Tickets\n    listTickets = (params?: {\n        properties?: string[];\n        limit?: number;\n        after?: string;\n    }) => this.domain.listTickets(params);\n    getTicket = (params: {\n        id: string;\n        properties?: string[];\n    }) => this.domain.getTicket(params);\n    streamTickets = (params?: {\n        properties?: string[];\n        pageSize?: number;\n    }) => this.domain.streamTickets(params);\n    getTickets = (params?: {\n        properties?: string[];\n        pageSize?: number;\n        maxItems?: number;\n    }) => this.domain.getTickets(params);\n    // Engagements\n    listEngagements = (params: {\n        objectType: \"notes\" | \"calls\" | \"emails\" | \"meetings\" | \"tasks\";\n        properties?: string[];\n        limit?: number;\n        after?: string;\n    }) => this.domain.listEngagements(params);\n    getEngagement = (params: {\n        objectType: \"notes\" | \"calls\" | \"emails\" | \"meetings\" | \"tasks\";\n        id: string;\n        properties?: string[];\n    }) => this.domain.getEngagement(params);\n    streamEngagements = (params: {\n        objectType: \"notes\" | \"calls\" | \"emails\" | \"meetings\" | \"tasks\";\n        properties?: string[];\n        pageSize?: number;\n    }) => this.domain.streamEngagements(params);\n    getEngagements = (params: {\n        objectType: \"notes\" | \"calls\" | \"emails\" | \"meetings\" | \"tasks\";\n        properties?: string[];\n        pageSize?: number;\n        maxItems?: number;\n    }) => this.domain.getEngagements(params);\n}\nexport function createHubSpotConnector(): HubSpotConnector {\n    return new HubSpotApiConnector();\n}\nexport type { HubSpotConnector } from \"./types/connector\";\nexport type { ConnectorConfig } from \"./types/config\";\nexport type { HttpResponseEnvelope } from \"./types/envelopes\";\n// Export all model types for external use\nexport type * from \"./models\";\n"]}